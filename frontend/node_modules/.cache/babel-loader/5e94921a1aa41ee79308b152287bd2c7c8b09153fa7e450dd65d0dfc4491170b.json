{"ast":null,"code":"import api from './api';\nexport const userService = {\n  getAll: () => {\n    return api.get('/users').then(response => response.data);\n  },\n  getForMessaging: () => {\n    return api.get('/users/messaging').then(response => response.data);\n  },\n  getById: id => {\n    return api.get(`/users/${id}`).then(response => response.data);\n  },\n  create: userData => {\n    return api.post('/users', userData).then(response => response.data);\n  },\n  update: (id, userData) => {\n    return api.put(`/users/${id}`, userData).then(response => response.data);\n  },\n  updateProfile: formData => {\n    return api.put('/users/profile', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => response.data);\n  },\n  changePassword: data => {\n    return api.put('/users/profile/password', data).then(response => response.data);\n  },\n  delete: id => {\n    return api.delete(`/users/${id}`).then(response => response.data);\n  },\n  getStats: () => {\n    return api.get('/users/stats').then(response => response.data);\n  }\n};","map":{"version":3,"names":["api","userService","getAll","get","then","response","data","getForMessaging","getById","id","create","userData","post","update","put","updateProfile","formData","headers","changePassword","delete","getStats"],"sources":["E:/L3 - INFO/Stage L3/sgde deepseek/frontend/src/services/userService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const userService = {\r\n  getAll: () => {\r\n    return api.get('/users')\r\n      .then(response => response.data);\r\n  },\r\n\r\n  getForMessaging: () => {\r\n    return api.get('/users/messaging')\r\n      .then(response => response.data);\r\n  },\r\n\r\n  getById: (id) => {\r\n    return api.get(`/users/${id}`)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  create: (userData) => {\r\n    return api.post('/users', userData)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  update: (id, userData) => {\r\n    return api.put(`/users/${id}`, userData)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  updateProfile: (formData) => {\r\n    return api.put('/users/profile', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    }).then(response => response.data);\r\n  },\r\n\r\n  changePassword: (data) => {\r\n    return api.put('/users/profile/password', data)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  delete: (id) => {\r\n    return api.delete(`/users/${id}`)\r\n      .then(response => response.data);\r\n  },\r\n\r\n  getStats: () => {\r\n    return api.get('/users/stats')\r\n      .then(response => response.data);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAAA,KAAM;IACZ,OAAOF,GAAG,CAACG,GAAG,CAAC,QAAQ,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDC,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAOP,GAAG,CAACG,GAAG,CAAC,kBAAkB,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDE,OAAO,EAAGC,EAAE,IAAK;IACf,OAAOT,GAAG,CAACG,GAAG,CAAC,UAAUM,EAAE,EAAE,CAAC,CAC3BL,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDI,MAAM,EAAGC,QAAQ,IAAK;IACpB,OAAOX,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC,CAChCP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDO,MAAM,EAAEA,CAACJ,EAAE,EAAEE,QAAQ,KAAK;IACxB,OAAOX,GAAG,CAACc,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,QAAQ,CAAC,CACrCP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDS,aAAa,EAAGC,QAAQ,IAAK;IAC3B,OAAOhB,GAAG,CAACc,GAAG,CAAC,gBAAgB,EAAEE,QAAQ,EAAE;MACzCC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC,CAACb,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDY,cAAc,EAAGZ,IAAI,IAAK;IACxB,OAAON,GAAG,CAACc,GAAG,CAAC,yBAAyB,EAAER,IAAI,CAAC,CAC5CF,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDa,MAAM,EAAGV,EAAE,IAAK;IACd,OAAOT,GAAG,CAACmB,MAAM,CAAC,UAAUV,EAAE,EAAE,CAAC,CAC9BL,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC;EAEDc,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOpB,GAAG,CAACG,GAAG,CAAC,cAAc,CAAC,CAC3BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}